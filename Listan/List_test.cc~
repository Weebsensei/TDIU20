#include "catch.hpp"
#include "List.h"

TEST_CASE ("Constructors and getters")
{
  SECTION("Default")
    {
      Sorted_List t1;
      CHECK( t1.size() == 0 );
      CHECK( t1.empty() == true );
      CHECK( t1.to_string() == "");
    }
    
  SECTION("Init list")
  {
    Sorted_List t2{14};
    Sorted_List t3{6, 9, 1, 3, 7, 3};
    CHECK( t2.empty() == false );
    CHECK( t2.get(1)  == 14 );
    CHECK( t2.size()  == 1  );
    CHECK( t3.size()  == 6 );
    CHECK( t3.get(6)  == 9 );
    CHECK( t3.to_string() == "1 3 3 6 7 9 ");
  }
  SECTION("EDIT(REMOVE/INSERT)")
  {
    Sorted_List t1{9, 3, 7, 1, 5};
    CHECK( t1.size() == 5 );
    CHECK( t1.to_string() == "1 3 5 7 9 ");
    t1.remove(2);
    CHECK( t1.to_string() == "1 5 7 9 ");
    CHECK( t1.size() == 4 );
    t1.SortedInsert(11);
    CHECK( t1.to_string() == "1 5 7 9 11 ");
    CHECK( t1.size() == 5 );
  }
  SECTION("COPY")
  {
    Sorted_List t4{1, 2, 3, 4, 5};
    Sorted_List t5{t4};
    Sorted_List t6{}; 
    CHECK( t5.to_string() == "1 2 3 4 5 ");
    CHECK( t5.get(5)  == 5 );
    t4.empty_list();
    CHECK( t4.to_string() == "" );
    CHECK( t5.to_string() == "1 2 3 4 5 ");
    CHECK( t4.size()  == 0 );  
    CHECK( t5.size()  == 5 );
    t6 = t5;
    CHECK( t5.size()  == 5 );
    CHECK( t6.size()  == 5 );
    t5.empty_list();
    CHECK( t5.to_string() == "" );
    CHECK( t6.to_string() == "1 2 3 4 5 ");
    t6 = t6;
    CHECK( t6.to_string() == "1 2 3 4 5 ");
  }
  SECTION("MOVE")
  {
    Sorted_List t5{1337, 420, 69, 123, -1};
    Sorted_List t6{std::move(t5)};
    CHECK( t5.to_string() == "" );
    CHECK( t6.to_string() == "-1 69 123 420 1337 " );
    Sorted_List t7{};
    t7 = std::move(t6);
    CHECK( t7.size() == 5 );
    CHECK( t6.size() == 0 );
    t7 = std::move(t7);
    CHECK( t7.to_string() == "-1 69 123 420 1337 " );

  }
  SECTION("ERRORS")
  {
    Sorted_List t6{1, 2, 3, 4, 5};
    CHECK_THROWS( t6.get(0) );
    CHECK_THROWS( t6.get(-1) );
    CHECK_THROWS( t6.get(6) );
    CHECK_THROWS( t6.remove(0) );
    CHECK_THROWS( t6.remove(-1) );
    CHECK_THROWS( t6.remove(6) );

  }

    
}
